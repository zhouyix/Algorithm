/*
 * @lc app=leetcode id=1051 lang=java
 *
 * [1051] Height Checker
 */
class Solution {
    public int heightChecker(int[] heights) {
        int count = 0;
        int[] bucs = new int[101];
        for(int i=0;i<heights.length;i++){
            bucs[heights[i]]++;
        }

        for(int i=1;i<bucs.length;i++){
            bucs[i] = bucs[i-1] + bucs[i];
        }

        for(int i=0;i<heights.length;i++){
            int beginIndex = heights[i]>0 ? bucs[heights[i]-1] : 0; 
            int endIndex = bucs[heights[i]] -1;
            if(i < beginIndex || i > endIndex)
              count++;
        }

        return count;
        
    }

    public int heightChecker2(int[] heights) {
        int[] heightToFreq = new int[101];
        
        for (int height : heights) {
            heightToFreq[height]++;
        }
        
        int result = 0;
        int curHeight = 0;
        
        for (int i = 0; i < heights.length; i++) {
            while (heightToFreq[curHeight] == 0) {
                curHeight++;
            }
            
            if (curHeight != heights[i]) {
                result++;
            }
            heightToFreq[curHeight]--;
        }
        
        return result;
    }
}

